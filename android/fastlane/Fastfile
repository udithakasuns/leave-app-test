# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

before_all do
  ensure_git_branch(
    branch: "KA/fastlane"
  )
  git_pull
end

platform :android do
  desc "Build and publish the android application"
  lane :build do
    releaseFilePath = File.join(Dir.pwd, "../app", "my-release-key.keystore")
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => "dTY93EMHxuCCCWJ6",
        "android.injected.signing.key.alias" => "leave",
        "android.injected.signing.key.password" => "dTY93EMHxuCCCWJ6",
      }
    )
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end
end


# platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end

#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     releaseFilePath = File.join(Dir.pwd, "../app", "my-release-key.keystore")
#     gradle(task: 'clean')
#     gradle(
#       task: 'bundle',
#       build_type: 'Release',
#       print_command: false,
#       properties: {
#         "android.injected.signing.store.file" => releaseFilePath,
#         "android.injected.signing.store.password" => "dTY93EMHxuCCCWJ6",
#         "android.injected.signing.key.alias" => "leave",
#         "android.injected.signing.key.password" => "dTY93EMHxuCCCWJ6",
#       }
#     )
#     upload_to_play_store(
#        track: 'internal'
#     )
  
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end

#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end
# end
